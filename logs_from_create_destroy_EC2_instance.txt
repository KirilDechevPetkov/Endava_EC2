PS C:\terraform\terraform-project> terraform apply --auto-approve
aws_security_group.security_SSH: Refreshing state... [id=sg-0ed0f31ca223f9528]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.KirilPetkovTestEndava will be created
  + resource "aws_instance" "KirilPetkovTestEndava" {
      + ami                                  = "ami-09439f09c55136ecf"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "Test2"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = [
          + "security_SSH",
        ]
      + source_dest_check                    = true
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "DemoKiril"
        }
      + tags_all                             = {
          + "Name" = "DemoKiril"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification {
          + capacity_reservation_preference = (known after apply)

          + capacity_reservation_target {
              + capacity_reservation_id                 = (known after apply)
              + capacity_reservation_resource_group_arn = (known after apply)
            }
        }

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + enclave_options {
          + enabled = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + maintenance_options {
          + auto_recovery = (known after apply)
        }

      + metadata_options {
          + http_endpoint               = (known after apply)
          + http_put_response_hop_limit = (known after apply)
          + http_tokens                 = (known after apply)
          + instance_metadata_tags      = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_card_index    = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.
aws_instance.KirilPetkovTestEndava: Creating...
aws_instance.KirilPetkovTestEndava: Still creating... [10s elapsed]
aws_instance.KirilPetkovTestEndava: Still creating... [20s elapsed]
aws_instance.KirilPetkovTestEndava: Still creating... [30s elapsed]
aws_instance.KirilPetkovTestEndava: Creation complete after 32s [id=i-0326700abfd25067b]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
PS C:\terraform\terraform-project> terraform destroy
aws_security_group.security_SSH: Refreshing state... [id=sg-0ed0f31ca223f9528]
aws_instance.KirilPetkovTestEndava: Refreshing state... [id=i-0326700abfd25067b]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # aws_instance.KirilPetkovTestEndava will be destroyed
  - resource "aws_instance" "KirilPetkovTestEndava" {
      - ami                                  = "ami-09439f09c55136ecf" -> null
      - arn                                  = "arn:aws:ec2:eu-central-1:256741976855:instance/i-0326700abfd25067b" -> null
      - associate_public_ip_address          = true -> null
      - availability_zone                    = "eu-central-1b" -> null
      - cpu_core_count                       = 1 -> null
      - cpu_threads_per_core                 = 1 -> null
      - disable_api_termination              = false -> null
      - ebs_optimized                        = false -> null
      - get_password_data                    = false -> null
      - hibernation                          = false -> null
      - id                                   = "i-0326700abfd25067b" -> null
      - instance_initiated_shutdown_behavior = "stop" -> null
      - instance_state                       = "running" -> null
      - instance_type                        = "t2.micro" -> null
      - ipv6_address_count                   = 0 -> null
      - ipv6_addresses                       = [] -> null
      - key_name                             = "Test2" -> null
      - monitoring                           = false -> null
      - primary_network_interface_id         = "eni-0409f3c94c02e2704" -> null
      - private_dns                          = "ip-172-31-37-109.eu-central-1.compute.internal" -> null
      - private_ip                           = "172.31.37.109" -> null
      - public_dns                           = "ec2-3-121-98-189.eu-central-1.compute.amazonaws.com" -> null
      - public_ip                            = "3.121.98.189" -> null
      - secondary_private_ips                = [] -> null
      - security_groups                      = [
          - "security_SSH",
        ] -> null
      - source_dest_check                    = true -> null
      - subnet_id                            = "subnet-0fa2e89cd025f1c68" -> null
      - tags                                 = {
          - "Name" = "DemoKiril"
        } -> null
      - tags_all                             = {
          - "Name" = "DemoKiril"
        } -> null
      - tenancy                              = "default" -> null
      - user_data_replace_on_change          = false -> null
      - vpc_security_group_ids               = [
          - "sg-0ed0f31ca223f9528",
        ] -> null

      - capacity_reservation_specification {
          - capacity_reservation_preference = "open" -> null
        }

      - credit_specification {
          - cpu_credits = "standard" -> null
        }

      - enclave_options {
          - enabled = false -> null
        }

      - maintenance_options {
          - auto_recovery = "default" -> null
        }

      - metadata_options {
          - http_endpoint               = "enabled" -> null
          - http_put_response_hop_limit = 1 -> null
          - http_tokens                 = "optional" -> null
          - instance_metadata_tags      = "disabled" -> null
        }

      - root_block_device {
          - delete_on_termination = true -> null
          - device_name           = "/dev/xvda" -> null
          - encrypted             = false -> null
          - iops                  = 100 -> null
          - tags                  = {} -> null
          - throughput            = 0 -> null
          - volume_id             = "vol-07727c8a89aa24bbf" -> null
          - volume_size           = 8 -> null
          - volume_type           = "gp2" -> null
        }
    }

  # aws_security_group.security_SSH will be destroyed
  - resource "aws_security_group" "security_SSH" {
      - arn                    = "arn:aws:ec2:eu-central-1:256741976855:security-group/sg-0ed0f31ca223f9528" -> null
      - description            = "security group for SSH" -> null
      - egress                 = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - description      = ""
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = []
              - self             = false
              - to_port          = 65535
            },
        ] -> null
      - id                     = "sg-0ed0f31ca223f9528" -> null
      - ingress                = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - description      = ""
              - from_port        = 22
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "tcp"
              - security_groups  = []
              - self             = false
              - to_port          = 22
            },
        ] -> null
      - name                   = "security_SSH" -> null
      - owner_id               = "256741976855" -> null
      - revoke_rules_on_delete = false -> null
      - tags                   = {
          - "Name" = "security_group_SSH"
        } -> null
      - tags_all               = {
          - "Name" = "security_group_SSH"
        } -> null
      - vpc_id                 = "vpc-020a5eb5d012acd3d" -> null
    }

Plan: 0 to add, 0 to change, 2 to destroy.

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

aws_instance.KirilPetkovTestEndava: Destroying... [id=i-0326700abfd25067b]
aws_instance.KirilPetkovTestEndava: Still destroying... [id=i-0326700abfd25067b, 10s elapsed]
aws_instance.KirilPetkovTestEndava: Still destroying... [id=i-0326700abfd25067b, 20s elapsed]
aws_instance.KirilPetkovTestEndava: Destruction complete after 29s
aws_security_group.security_SSH: Destroying... [id=sg-0ed0f31ca223f9528]
aws_security_group.security_SSH: Destruction complete after 1s

Destroy complete! Resources: 2 destroyed.
PS C:\terraform\terraform-project>